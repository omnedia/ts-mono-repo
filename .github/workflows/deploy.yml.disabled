name: Build and Deploy your App via GHCR

on:
  push:
    branches:
      - master

jobs:
  setup:
    name: Setup & Login
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: YOUR_GITHUB_USERNAME
          password: ${{ secrets.GHCR_PAT }}

  build-frontend:
    name: Build Angular Docker Image
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: YOUR_GITHUB_USERNAME
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & Push Angular Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ghcr.io/YOUR_USERNAME/YOUR_APP-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-backend:
    name: Build NestJS Docker Image
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: xSentry
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & Push NestJS Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ghcr.io/YOUR_USERNAME/YOUR_APP-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: [ build-frontend, build-backend ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy Compose File to Server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "./docker-compose.server.yml"
          target: "projects/YOUR_APP/"

      - name: SSH to Server and Deploy Containers
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd projects/YOUR_APP
            
            mv -f docker-compose.server.yml docker-compose.yml

            echo "${{ secrets.NEST_ENV_FILE }}" > .env

            docker login ghcr.io -u YOUR_USERNAME -p ${{ secrets.GHCR_PAT }}

            docker compose pull
            docker compose up -d --force-recreate

            docker compose exec backend npx typeorm migration:run -d dist/backend/src/datasource.js
